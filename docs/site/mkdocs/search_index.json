{
    "docs": [
        {
            "location": "/", 
            "text": "Functionality\n\n\nThis package was inspired by its R counterpart, the \nlmfor package\n with the addition of equations from the western US. For more info on lmfor, please see http://cs.uef.fi/~lamehtat/rcodes.htm\n\n\n\n\nCalculating missing tree heights using a height diameter equation\n\n\nHeight-diameter equations are widespread in forestry and have been the subject of extensive research over the past decades. As a result there is a large amount of formulas and parameter sets based on regional, operational and biological differences.\n\n\nIn forest inventories, measuring heights on all trees may not be possible so formulas are used to fill in missing data.\n\n\n\n\nTypes\n\n\nForestBiometrics creates a type \nHeightDiameter\n that holds an equation form and its parameters.\n\n\nstruct HeightDiameter \n: Function\nformula::Function\nb\nend\n\n\n\n\nformula\n can be one of the pre-named equation forms such as Wyckoff, Korf, etc.\n\n\nWyckoff=(x,b)-\n4.5+exp(b[1]+(b[2]/(x+1)) #defined in HeightDub.jl\n\n\n\n\nb\n is a dictionary of species specific equation parameters in the form of\n\n\nString: Array{Float64} #species specific coefficients stored as dictionary\n\ncoeffs =Dict{String,Array{Float64}}(\n\nWP\n=\n [5.19988 -9.26718],\n\nWL\n=\n[4.97407  -6.78347],\n\nDF\n=\n[4.81519  -7.29306] )\n\nHD = HeightDiameter(Wyckoff,coeffs)\n\n\n\n\nIf a user wanted to change model parameters, they can redefine them as needed independent of model form or change both equation form and associated parameters.\n\n\nPre-defined equation forms available include: \n#latex equations to be added\n \n#2 parameter equation forms, mainly from LMFOR package\n Curtis, Michailoff, Meyer, Micment, Micment2, Naslund, Naslund2, Naslund3, Naslund4, Power, Wyckoff\n\n\n3 parameter equations, mainly from LMFOR R package\n Chapman, Gompertz, HossfeldIV, Korf, Logistic, Monserud, Prodan, Ratkowsky, Sibbesen, Weibull\n\n\nfunctions\n\n\ncalculate_height(params::HeightDiameter,dbh,species)\n\n\nThis takes a HeightDiameter type and applies the function given a species and dbh.\n\n\n\n\nCalculating the volume of an individual tree\n\n\nForestBiometrics has functions to calculate log volumes using a variety of scaling rules\n\n\n  doyle_volume(small end diameter, log length)\n\n\n\n\ncalculates the doyle volume\n\n\n  scribner_volume(small end diameter, log length)\n\n\n\n\ncalculates the scribner volume\n\n\n  international_volume(small end diameter, log length)\n\n\n\n\ncalculates the volume using international rule\n\n\n\n\nCalculating limiting distance for a variable radius plot\n\n\nWhile this may not be useful in a programming context, it is a relatively simple function and may be useful for demonstration purposes.\n\n\nlimiting_distance(baf, dbh, horizontal distance)\n\n\n\n\n\n\nCalculating equilibrium moisture content\n\n\nEquilibrium moisture content is the content where a piece of wood neither gains or loses moisture. The equation is from \nThe National Fire Danger Rating System: Basic Equations; Jack D Cohen, John E. Deeming. GTR PSW-82\n\n\nemc(relative_humidity::Float64,temp::Float64)\n\n\n\n\n\n\nCalculating Reineke's Stand Density Index (SDI)\n\n\nsdi(tpa,qmd)\n\n\n\n\nwill return the Stand Density Index calculated as\n\n\n\n\n sdi = tpa * (\\frac{qmd}{10})^{1.605}", 
            "title": "Home"
        }, 
        {
            "location": "/#functionality", 
            "text": "This package was inspired by its R counterpart, the  lmfor package  with the addition of equations from the western US. For more info on lmfor, please see http://cs.uef.fi/~lamehtat/rcodes.htm", 
            "title": "Functionality"
        }, 
        {
            "location": "/#calculating-missing-tree-heights-using-a-height-diameter-equation", 
            "text": "Height-diameter equations are widespread in forestry and have been the subject of extensive research over the past decades. As a result there is a large amount of formulas and parameter sets based on regional, operational and biological differences.  In forest inventories, measuring heights on all trees may not be possible so formulas are used to fill in missing data.", 
            "title": "Calculating missing tree heights using a height diameter equation"
        }, 
        {
            "location": "/#types", 
            "text": "ForestBiometrics creates a type  HeightDiameter  that holds an equation form and its parameters.  struct HeightDiameter  : Function\nformula::Function\nb\nend  formula  can be one of the pre-named equation forms such as Wyckoff, Korf, etc.  Wyckoff=(x,b)- 4.5+exp(b[1]+(b[2]/(x+1)) #defined in HeightDub.jl  b  is a dictionary of species specific equation parameters in the form of  String: Array{Float64} #species specific coefficients stored as dictionary\n\ncoeffs =Dict{String,Array{Float64}}( WP =  [5.19988 -9.26718], WL = [4.97407  -6.78347], DF = [4.81519  -7.29306] )\n\nHD = HeightDiameter(Wyckoff,coeffs)  If a user wanted to change model parameters, they can redefine them as needed independent of model form or change both equation form and associated parameters.  Pre-defined equation forms available include:  #latex equations to be added   #2 parameter equation forms, mainly from LMFOR package  Curtis, Michailoff, Meyer, Micment, Micment2, Naslund, Naslund2, Naslund3, Naslund4, Power, Wyckoff  3 parameter equations, mainly from LMFOR R package  Chapman, Gompertz, HossfeldIV, Korf, Logistic, Monserud, Prodan, Ratkowsky, Sibbesen, Weibull", 
            "title": "Types"
        }, 
        {
            "location": "/#functions", 
            "text": "calculate_height(params::HeightDiameter,dbh,species)  This takes a HeightDiameter type and applies the function given a species and dbh.", 
            "title": "functions"
        }, 
        {
            "location": "/#calculating-the-volume-of-an-individual-tree", 
            "text": "ForestBiometrics has functions to calculate log volumes using a variety of scaling rules    doyle_volume(small end diameter, log length)  calculates the doyle volume    scribner_volume(small end diameter, log length)  calculates the scribner volume    international_volume(small end diameter, log length)  calculates the volume using international rule", 
            "title": "Calculating the volume of an individual tree"
        }, 
        {
            "location": "/#calculating-limiting-distance-for-a-variable-radius-plot", 
            "text": "While this may not be useful in a programming context, it is a relatively simple function and may be useful for demonstration purposes.  limiting_distance(baf, dbh, horizontal distance)", 
            "title": "Calculating limiting distance for a variable radius plot"
        }, 
        {
            "location": "/#calculating-equilibrium-moisture-content", 
            "text": "Equilibrium moisture content is the content where a piece of wood neither gains or loses moisture. The equation is from  The National Fire Danger Rating System: Basic Equations; Jack D Cohen, John E. Deeming. GTR PSW-82  emc(relative_humidity::Float64,temp::Float64)", 
            "title": "Calculating equilibrium moisture content"
        }, 
        {
            "location": "/#calculating-reinekes-stand-density-index-sdi", 
            "text": "sdi(tpa,qmd)  will return the Stand Density Index calculated as    sdi = tpa * (\\frac{qmd}{10})^{1.605}", 
            "title": "Calculating Reineke's Stand Density Index (SDI)"
        }
    ]
}